LÓGICA DE PROGRAMAÇÃO

PORQUE É IMPORTANTE -> É o processo de procurar pensar na mesma sequencia em que o computador
executará as tarefas

->Procuramos imaginar como as ações serão executadas , partindo do estudo de um problema até 
chegar à solução dele, por meio da cosntrução de um algoritmo

ALGORITMOS -> Sequencia finita que levam à execução de uma tarefa

->É algo como uma receita, apresenta uma sequencia de instruções para um fim especifico

->Essas instruções devem ser descritas de maneira objetiva e simples

PROGRAMAS DE COMPUTADORES -> Os programas são os algoritmos escritos em uma linguagem computacional
como:

->Java , C#, Python , entre outras

->Essas instruções são interpretadas por um computador

CARACTERÍSTICAS BÁSICAS DO ALGORITMO -> Ponto inicial e Ponto final -> Todo algoritmo deve ter
um ponto inicial e chegar a um ponto final

NÃO SER AMBÍGUO -> A leitura de um algoritmo tem de ser clara, não pode ter dupla interpretação

TRATAR DADOS EXTERNOS -> O algoritmo tem de receber dados externos e ser capaz de retornar
resultados (saída de dados)

ETAPAS ALCANÇAVÉIS -> O algoritmo deve ter suas etapas alcançaveis em algum momento da programação

COMPOSIÇÃO DE UM ALGORITMO -> Ao iniciar um algoritmo é necessario dividir a situção-problema
em tres fases fundamentais

ENTRADA ->São os dados de entrada do algoritmo 

PROCESSAMENTO ->São os procedimentos utilizados para chegar ao resultado final

SAÍDA -> São os dados já processados, ou seja, o resultado da programação

FORMAS DE REPRESENTAÇÃO -> Podemos representar algoritmos estruturados de tres formas

DESCRIÇÃO NARRATIVA -> Formas de representação utilizada para descrever um algoritmo de forma
que o receptor da informação entenda e interprete o assunto

->Mesmo não conhecendo sobre algoritmos

FLUXOGRAMA -> Utiliza símbolos gráficos para representar os algoritmos 

->Existem simbolos padronizados para cada tipo de instrução, como início, entrada de dados
processamento etc..

PSEUDOCÓDIGO -> Também conhecido como portugol ou portugues estruturado, é a principal porta
de entrada para linguagem de programação 

->Esse formato consiste na definição de uma pseudo linguagem de programação, cujos comandos
são em portugues, para representar algortimos

VARIAVEIS E CONSTANTES -> Quando iniciamos a programação temos de nos preocupar onde vamos 
armazenar as informações , para isso, temos as variaveis e constantes 

VARIAVEIS -> Recurso utilizado para armazenar recuperar dados , é um espaço que reservamos na memoria atribuindo um nome
e organizando os dados maniplados no programa 

TIPOS DE DADOS -> Ao criar uma váriavel no programa temos de especificar o tipo de dado que será armazenado

EXEMPLO -> Uma váriavel que vai armazenar o nome de uma pessoa será do tipo "caracter", pois
armazenará letras 

-> Uma variavel que armazenará a idade de uma pessoa , poderá receber somente "números inteiros"
, portando, deverá ser declarada como sendo do tipo "inteiro" 

-> Já uma variavel "valor", como está representando um espaço para armazenar número com casas
decimais, devera ser declarada como sendo do tipo "real"

->Os tipod de dados influenciam na forma como o programa irá trabalhar, no desempenho do
programa e no seu consumo de memória

COMANDOS DE ENTRADA E SAÍDA -> Os sistemas são construidos a partir de dados adquiridos por meio
de interação humana e os resultados também devem ser apresentados

->Os comandos de entrada e saída são os que permitem a interaçaõ com o usuario por  meio
dos dipositivos de saída 

ex ->teclado , mouse ,leitor etc..

ALGORITMO - COMANDOS DE ENTRADA E SAÍDA -> Cada linguagem de programação tem seus comandos 
próprios para entrada e saída de dados 

->Na descrição de algoritmos utilizamos os seguintes comandos

ENTRADA -> O comando LEIA é utilizado para que o usuário informe um valor a ser atribuído em
uma váriavel do sistema

SAÍDA -> Para escrita de dados ou mensagens utilizamos o comando ESCREVA , para escrita em 
uma linha e ESCREVAL ,para escrita com quebra de linha ao final 

OPERADORES -> Os operadores são meios de incrementar, decrementar, comparat e avaliar dados
durante a execução do programa 

->Existem 4 tipos de operadores 

->operador de atribuição
->operadores aritméticos
->operadores relacionais
->operadores lógicos 

OPERADOR DE ATRIBUIÇÃO -> O operador de atribuição em algoritmos é representado pela seta <-,
indicando que algum valor será atribuído em alguma variavel

OPERADORES ARITMÉTICOS -> Permitem a realização de operações matemáticas com dados do tipo
numérico

-> Os símbolos para os operadores aritméricos são:

ADIÇÃO -> +
SUBTRAÇÃO -> -
MULTIPLICAÇÃO -> *
DIVISÃO -> /
EXPONENCIAÇÃO -> **

HIERARQUIA DAS OPERAÇÕES ATIRMÉTICAS -> Ao realizar as operações matemáticas temos uma 
sequencia das operações a serem realizadas,que são:

-> Cálculos que estão entre parenteses: ()
-> exponenciação : **
-> multiplicação, divisão (o que estiver primeiro): */
->adição ou subtração (o que estiver primeiro): + ou -

OPERADORES RELACIONAIS -> Os operadores relacionais são utilizados para comparar caracteres ,
números, variaveis e expressões

->Os operadores relacionais utilizados nos algoritmos são:

COMPARAÇÃO -> =
DIFERENTE DE -> <>
MAIOR QUE -> >
MENOR QUE -> <
MAIOR OU IGUAL -> >=
MENOR OU IGUAL -> <=

OPERADORES LÓGICOS -> Servem para combinar resultados de expressões , retornando se o resultado
final é verdadeiro ou falso 

CONHECENDO OS OPERADORES LÓGICOS 

E/AND -> O resultado de uma expressão lógica usando operador lógico AND é verdadeira, somente
se todas as condições forem verdadeiras 

EXEMPLO -> (3>5) AND (8>1) = FALSO

(A>B) AND (A>C) = VERDADEIRO 

OU/OR -> O resultado de uma expressão lógica usando o operador lógico OR é falsa, somente
se todas as condições forem falsas 

EXEMPLO -> (3>5) OR (8>1) = VERDADEIRO

(A>B) OR (A>C) = VERDADEIRO

NÃO/NOT -> O resultado de uma expressão lógica usando o operador lógico NOT, inverte o valor
da expressão ou condição, ou seja , se verdadeira inverte-se para falsa e vice-versa

EXEMPLO -> NOT (3>5) = VERDADEIRO

NOT (A>B) = FALSO 
