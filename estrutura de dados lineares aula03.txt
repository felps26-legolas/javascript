ESTRUTURA DE DADOS LINEARES AULA 03

RECURSIVIDADE 

.É a capacidade de uma função chamar a si mesma , transforma um problema em outro menor até achar a solução

.São mais simples de compreender, mas podem consumir mais recursos devido ao empilhamento das camadas

.Exemplo é o calculo do fatorial , definido recursivamente como n! = n* (n-1)! com o caso base 0! = 1

RECURSIVIDADE (CONT.)

.Algoritmos recursivos tem um caso base , redução do problema e chama a si mesmo, ex : a sequência de fibonacci

.Esta sequência define os valores iniciais 0 e 1 como casos base , com os demais valores sendo a soma dos dois anteriores

.A execução recursiva da função de fibonacci gera uma arvore de chamadas , onde cada chamada aguarda a finalização das derivadas

RECURSIVIDADE (CONT.2)

.Algoritmos recursivos podem realizar várias chamadas para a mesma instância , impactando o tempo de processamento

.Devem ser utilizados com cautela pois instancias grandes podem consumir muita memória

ORDENAÇÃO PEO MÉTODO RÁPIDO (QUICK SORT)

.É um algoritmo muito utilizado devido ao seu bom desempenho 

.Utiliza o paradigma da divisão e conquista para ordenar um vetor , se reorganizando em sub-vetores 

.A implementação do quick-sort considera dois procedimentos : o quick sort() e o parition() , sendo o parition() a chave
para reorganizar o vetor

QUICK SORT - ALGORITMO PARITION

.Seu procedimento recebe o vetor e os indexadores de inicio e fim como parametros

.A ultima posição do vetor é reservada, e um ponteiro "i" é iniciado antes da primeira posição 

.O laço de repetição percorre o vetor , trocando valores menores que o reservado para antes do ponteiro "i"

QUICK SORT - EXECUÇÃO DO PARITION

.Seu procedimento organiza o vetor de forma que os valores menores que o pivô fiquem a esquerda  e maiores a direita 

.Após sua execução o valor retornado é usado para dividir o vetor em subvetores , que serão ordenados recursivamente pelo quick sort

.O quick sort oferece um ótimo desempenho médio e é amplamente utilizado para ordenação de arranjos 

ORDENAÇÃO POR MISTURA (MERGE - SORT)

.Utiliza abordagens de divisão e conquista , combinando dois subvetores ordenados em um único vetor ordenado 

.Seu procedimento combina vetores ordenados , criando subvetores temporarios E e D , com um valor sentinela no final

.A combinação é feita selecionando o menor valor entre os subvetores e inserindo-o no vetor original

PROCEDIMENTO MERGE SORT

.A seleção  do menor valor e a substituição do valor inicial de cada subvetor são repetidas até que todos os valores
sejam selecionados 

.É um procedimento funcional somente quando os subvetores estão ordenados , sendo necessário um procedimento complementar para 
garantir essa premissa

.Divide o vetor de entrada até que cada subvetor tenha apenas um elemento 

PESQUISA BINÁRIA 

.É uma estratégia de busca realizada sobre um vetor previamente ordenado , buscando melhorar a eficiencia de busca

.A analogia da lista telefonica ilustra a busca binária , onde a lista é dividida ao meio para verificar a localização do nome procurado

.A busca binária realiza a busca sob um vetor ordenado , descartando metade do vetor a cada passo , reduzindo o numero de comparações

PESQUISA BINÁRIA - ALGORITMO

.Recebe o valor a ser procurado , o vetor ordenado , e as posições inicial e final do vetor como parâmetros 

.O algoritmo verifica o tamanho do vetor , dividindo-o ao meio a cada chamada recursiva 

.Se o valor procurado é encontrado na posição média , essa posição é retornada , caso contrário , a busca continua no subvetor à direita ou à
esquerda.